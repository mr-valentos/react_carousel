{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","x","gap","first","last","handlePrevBtn","step","itemWidth","setState","handleNextBtn","length","max","this","props","images","animationDuration","frameSize","width","className","style","transition","map","el","i","src","alt","height","type","background","onClick","Component","App","ItemWidth","FrameSize","Step","AnimationDuration","action","htmlFor","id","name","min","defaultValue","onChange","event","target","value","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53d286d3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  animationDuration: number,\n  frameSize: number,\n  itemWidth: number,\n};\n\ntype State = {\n  transform: string;\n};\n\nclass Carousel extends Component<Props, State > {\n  state = {\n    transform: 'translateX(0px)',\n  };\n\n  x = 0;\n\n  gap = 10;\n\n  first = true;\n\n  last = false;\n\n  handlePrevBtn = (step: number, itemWidth: number) => {\n    this.x += step * itemWidth + (step * this.gap);\n    this.last = false;\n    if (this.x >= 0) {\n      this.first = true;\n      this.x = 0;\n    }\n\n    this.setState({ transform: `translateX(${this.x}px)` });\n  };\n\n  handleNextBtn = (step: number, itemWidth: number, length: number) => {\n    this.x -= step * itemWidth + (step * this.gap);\n    this.first = false;\n    const max = -((itemWidth + this.gap) * length);\n\n    if (this.x <= max) {\n      this.last = true;\n      this.x = max;\n    }\n\n    this.setState({ transform: `translateX(${this.x}px)` });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      animationDuration,\n      itemWidth,\n      frameSize,\n    } = this.props;\n    const { transform } = this.state;\n\n    const width = frameSize * itemWidth + (this.gap * (frameSize - 1));\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${width}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `${transform}`,\n            transition: `transform ${animationDuration}ms`,\n            gap: `${this.gap}px`,\n          }}\n        >\n          {images.map((el, i) => (\n            <li key={el}>\n              <img\n                src={el}\n                alt={`${i}`}\n                height={itemWidth}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          type=\"button\"\n          className={`Carousel__btn prev-btn ${this.first && 'disabled'}`}\n          style={{\n            background: 'url(\"./img/arrow-left.svg\")0 0/ cover no-repeat',\n          }}\n          onClick={() => this.handlePrevBtn(\n            step,\n            itemWidth,\n          )}\n        />\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className={`Carousel__btn next-btn ${this.last && 'disabled'}`}\n          style={{\n            background: 'url(\"./img/arrow-right.svg\")0 0/ cover no-repeat',\n          }}\n          onClick={() => this.handleNextBtn(\n            step,\n            itemWidth,\n            (images.length - frameSize),\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  ItemWidth: number;\n  FrameSize: number;\n  Step: number;\n  AnimationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    ItemWidth: 130,\n    FrameSize: 3,\n    Step: 3,\n    AnimationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      AnimationDuration,\n      Step,\n      FrameSize,\n      ItemWidth,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={Step}\n          animationDuration={AnimationDuration}\n          frameSize={FrameSize}\n          itemWidth={ItemWidth}\n        />\n\n        <form action=\"#\" className=\"App__form\">\n          <label htmlFor=\"itemId\">\n            {'ItemWidth: '}\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              name=\"itemWidth\"\n              className=\"App__input\"\n              min=\"100\"\n              defaultValue={ItemWidth}\n              onChange={(event) => {\n                this.setState({ ItemWidth: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            {'FrameSize: '}\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              name=\"FrameSize\"\n              className=\"App__input\"\n              min=\"1\"\n              defaultValue={FrameSize}\n              onChange={(event) => {\n                this.setState({ FrameSize: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            {'Step: '}\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              name=\"Step\"\n              className=\"App__input\"\n              min=\"1\"\n              defaultValue={Step}\n              onChange={(event) => {\n                this.setState({ Step: +event.target.value });\n              }}\n            />\n          </label>\n\n          <label>\n            {'AnimationDuration: '}\n            <input\n              type=\"number\"\n              name=\"AnimationDuration\"\n              className=\"App__input\"\n              min=\"1\"\n              defaultValue={AnimationDuration}\n              onChange={(event) => {\n                this.setState({ AnimationDuration: +event.target.value });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}